# Script de v√©rification et maintenance Docker pour VeilleBot
# PowerShell version pour Windows

$ErrorActionPreference = "Stop"

Write-Host "=== V√©rification environnement Docker ===" -ForegroundColor Cyan

# V√©rifier si Docker est install√©
try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker install√© : $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker n'est pas install√© ou pas dans le PATH" -ForegroundColor Red
    exit 1
}

# V√©rifier si Docker daemon est en cours d'ex√©cution
try {
    docker info | Out-Null
    Write-Host "‚úÖ Docker daemon actif" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker daemon n'est pas en cours d'ex√©cution" -ForegroundColor Red
    Write-Host "üí° D√©marrez Docker Desktop" -ForegroundColor Yellow
    exit 1
}

# V√©rifier docker-compose
try {
    $composeVersion = docker-compose --version
    Write-Host "‚úÖ docker-compose install√© : $composeVersion" -ForegroundColor Green
} catch {
    try {
        $composeVersion = docker compose version
        Write-Host "‚úÖ docker compose (plugin) install√© : $composeVersion" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå docker-compose n'est pas disponible" -ForegroundColor Red
        exit 1
    }
}

Write-Host ""
Write-Host "=== √âtat des images et conteneurs VeilleBot ===" -ForegroundColor Cyan

# V√©rifier les images VeilleBot
Write-Host "Images VeilleBot locales :"
$images = docker images | Select-String -Pattern "(veillebot|nanandre)"
if ($images) {
    $images
} else {
    Write-Host "Aucune image VeilleBot trouv√©e" -ForegroundColor Yellow
}

Write-Host ""

# V√©rifier les conteneurs VeilleBot
Write-Host "Conteneurs VeilleBot :"
$containers = docker ps -a | Select-String -Pattern "(veillebot|nanandre)"
if ($containers) {
    $containers
} else {
    Write-Host "Aucun conteneur VeilleBot trouv√©" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "=== Nettoyage Docker (optionnel) ===" -ForegroundColor Cyan

# Proposer le nettoyage
$cleanup = Read-Host "Voulez-vous nettoyer les images et conteneurs non utilis√©s ? (y/N)"
if ($cleanup -eq "y" -or $cleanup -eq "Y") {
    Write-Host "Nettoyage des conteneurs arr√™t√©s..." -ForegroundColor Yellow
    docker container prune -f
    
    Write-Host "Nettoyage des images non utilis√©es..." -ForegroundColor Yellow
    docker image prune -f
    
    Write-Host "Nettoyage des r√©seaux non utilis√©s..." -ForegroundColor Yellow
    docker network prune -f
    
    Write-Host "Nettoyage des volumes non utilis√©s..." -ForegroundColor Yellow
    docker volume prune -f
    
    Write-Host "‚úÖ Nettoyage termin√©" -ForegroundColor Green
} else {
    Write-Host "Nettoyage ignor√©" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "=== Informations syst√®me ===" -ForegroundColor Cyan
Write-Host "Espace disque Docker :"
docker system df

Write-Host ""
Write-Host "=== Commandes utiles ===" -ForegroundColor Cyan
Write-Host "Build l'image :         bash build-docker.sh" -ForegroundColor White
Write-Host "Publier sur Docker Hub: bash publish-docker.sh" -ForegroundColor White
Write-Host "D√©marrer en local :     docker-compose up -d" -ForegroundColor White
Write-Host "D√©marrer en prod :      docker-compose -f docker-compose.prod.yml up -d" -ForegroundColor White
Write-Host "Voir les logs :         docker-compose logs -f" -ForegroundColor White
Write-Host "Arr√™ter :               docker-compose down" -ForegroundColor White

Write-Host ""
Write-Host "‚úÖ V√©rification Docker termin√©e" -ForegroundColor Green