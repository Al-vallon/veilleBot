#!/bin/bash

# Script de v√©rification et maintenance Docker pour VeilleBot
# Compatible Linux/macOS/Windows (via Git Bash)

set -e

echo "=== V√©rification environnement Docker ==="

# V√©rifier si Docker est install√© et en cours d'ex√©cution
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n'est pas install√© ou pas dans le PATH"
    exit 1
fi

echo "‚úÖ Docker install√© : $(docker --version)"

# V√©rifier si Docker daemon est en cours d'ex√©cution
if ! docker info &> /dev/null; then
    echo "‚ùå Docker daemon n'est pas en cours d'ex√©cution"
    echo "üí° D√©marrez Docker Desktop ou le service Docker"
    exit 1
fi

echo "‚úÖ Docker daemon actif"

# V√©rifier si docker-compose est disponible
if command -v docker-compose &> /dev/null; then
    echo "‚úÖ docker-compose install√© : $(docker-compose --version)"
elif docker compose version &> /dev/null; then
    echo "‚úÖ docker compose (plugin) install√© : $(docker compose version)"
else
    echo "‚ùå docker-compose n'est pas disponible"
    exit 1
fi

echo ""
echo "=== √âtat des images et conteneurs VeilleBot ==="

# V√©rifier les images VeilleBot
echo "Images VeilleBot locales :"
docker images | grep -E "(veillebot|nanandre)" || echo "Aucune image VeilleBot trouv√©e"

echo ""

# V√©rifier les conteneurs VeilleBot
echo "Conteneurs VeilleBot :"
docker ps -a | grep -E "(veillebot|nanandre)" || echo "Aucun conteneur VeilleBot trouv√©"

echo ""
echo "=== Nettoyage Docker (optionnel) ==="

# Proposer le nettoyage
read -p "Voulez-vous nettoyer les images et conteneurs non utilis√©s ? (y/N) " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "Nettoyage des conteneurs arr√™t√©s..."
    docker container prune -f
    
    echo "Nettoyage des images non utilis√©es..."
    docker image prune -f
    
    echo "Nettoyage des r√©seaux non utilis√©s..."
    docker network prune -f
    
    echo "Nettoyage des volumes non utilis√©s..."
    docker volume prune -f
    
    echo "‚úÖ Nettoyage termin√©"
else
    echo "Nettoyage ignor√©"
fi

echo ""
echo "=== Informations syst√®me ==="
echo "Espace disque Docker :"
docker system df

echo ""
echo "=== Commandes utiles ==="
echo "Build l'image :         bash build-docker.sh"
echo "Publier sur Docker Hub: bash publish-docker.sh"
echo "D√©marrer en local :     docker-compose up -d"
echo "D√©marrer en prod :      docker-compose -f docker-compose.prod.yml up -d"
echo "Voir les logs :         docker-compose logs -f"
echo "Arr√™ter :               docker-compose down"

echo ""
echo "‚úÖ V√©rification Docker termin√©e"
